let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
let NERDTreeMapPreviewSplit = "gi"
let NERDTreeMapCloseChildren = "X"
let ConqueGdb_GdbExe = ""
let EasyMotion_off_screen_search =  1 
let NERDTreeMapOpenInTabSilent = "T"
let ConqueTerm_EscKey = "<Esc>"
let UltiSnipsUsePythonVersion = "<tab>"
let NERDTreeMapCloseDir = "x"
let ConqueTerm_Color =  1 
let ConqueTerm_Version =  230 
let NERDTreeSortHiddenFirst = "1"
let NERDTreeMinimalUI = "0"
let NERDTreeMapRefresh = "r"
let UltiSnipsExpandTrigger = "<Tab>"
let EasyMotion_use_migemo =  0 
let NERDTreeAutoDeleteBuffer =  0 
let EasyMotion_smartcase =  0 
let ConqueGdb_Print = "<Leader>p"
let ConqueTerm_SendFunctionKeys =  0 
let NERDTreeBookmarksFile = "/Users/vincent.cogne/.NERDTreeBookmarks"
let UltiSnipsJumpForwardTrigger = "<c-b>"
let ConqueTerm_FastMode =  0 
let NERDTreeMapToggleHidden = "I"
let NERDTreeWinSize = "31"
let NERDTreeMapJumpParent = "p"
let ConqueGdb_Continue = "<Leader>c"
let EasyMotion_use_upper =  0 
let UltiSnipsRemoveSelectModeMappings =  1 
let EasyMotion_keys = "asdghklqwertyuiopzxcvbnmfj;"
let ConqueGdb_Disable =  0 
let NERDTreeMapPreview = "go"
let EasyMotion_do_mapping =  1 
let ConqueTerm_PyExe = ""
let NERDTreeDirArrows = "1"
let ConqueTerm_ColorMode = ""
let NERDTreeMapActivateNode = "o"
let NERDTreeQuitOnOpen = "0"
let NERDTreeWinPos = "left"
let EasyMotion_disable_two_key_combo =  0 
let NERDTreeMapMenu = "m"
let ConqueTerm_ShowBell =  0 
let EasyMotion_space_jump_first =  0 
let NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"
let EasyMotion_use_regexp =  1 
let ConqueTerm_Interrupt = "<C-c>"
let ConqueGdb_SrcSplit = "left"
let NERDTreeMapHelp = "?"
let EasyMotion_move_highlight =  1 
let NERDTreeMapToggleFilters = "f"
let ConqueGdb_Next = "<Leader>n"
let NERDTreeAutoCenter = "1"
let NERDTreeMapJumpPrevSibling = "<C-k>"
let NERDTreeShowBookmarks = "0"
let NERDTreeRemoveDirCmd = "rm -rf "
let ConqueGdb_Leader = "<Leader>"
let NERDTreeMouseMode = "1"
let EasyMotion_show_prompt =  1 
let ConqueTerm_UnfocusedUpdateTime =  250 
let EasyMotion_add_search_history =  1 
let ConqueTerm_TermLoaded =  1 
let NERDTreeChDirMode = "0"
let ConqueGdb_Finish = "<Leader>f"
let EasyMotion_do_shade =  1 
let ConqueTerm_CloseOnEnd =  0 
let ConqueTerm_InsertCharPre =  0 
let ConqueTerm_CodePage =  0 
let EasyMotion_grouping =  1 
let NERDTreeAutoCenterThreshold = "3"
let NERDTreeShowFiles = "1"
let NERDTreeMapOpenVSplit = "s"
let EasyMotion_enter_jump_first =  0 
let NERDTreeMapOpenSplit = "i"
let ConqueTerm_StartMessages =  0 
let EasyMotion_skipfoldedline =  1 
let NERDTreeCaseSensitiveSort = "0"
let NERDTreeHijackNetrw = "1"
let NERDTreeShowLineNumbers = "0"
let NERDTreeShowHidden = "0"
let NERDTreeBookmarksSort = "1"
let NERDTreeHighlightCursorline = "1"
let UltiSnipsEnableSnipMate =  1 
let EasyMotion_prompt = "Search for {n} character(s): "
let NERDTreeMapOpenInTab = "t"
let ConqueGdb_ToggleBreak = "<Leader>b"
let ConqueTerm_ExecFileKey = "<F11>"
let NERDTreeRespectWildIgnore = "0"
let ConqueTerm_InsertOnEnter =  0 
let NERDTreeMapCWD = "CD"
let NERDTreeNotificationThreshold = "100"
let NERDTreeMapPreviewVSplit = "gs"
let ConqueTerm_ToggleKey = "<F8>"
let NERDTreeMapJumpRoot = "P"
let UltiSnipsJumpBackwardTrigger = "<c-z>"
let ConqueGdb_Run = "<Leader>r"
let NERDTreeMapChdir = "cd"
let ConqueTerm_TerminalsString = ""
let NERDTreeMapToggleZoom = "A"
let ConqueGdb_Step = "<Leader>s"
let ConqueGdb_ReadTimeout =  50 
let NERDTreeMapRefreshRoot = "R"
let EasyMotion_cursor_highlight =  1 
let SessionLoad =  1 
let EasyMotion_loaded =  1 
let NERDTreeCascadeOpenSingleChildDir = "1"
let UltiSnipsPythonPath = "/Users/vincent.cogne/Github/dotfiles/.vim/bundle/ultisnips/pythonx"
let ConqueGdb_Backtrace = "<Leader>t"
let EasyMotion_startofline =  1 
let ConqueTerm_ReadUnfocused =  1 
let ConqueTerm_SendFileKey = "<F10>"
let ConqueTerm_Loaded =  1 
let NERDTreeMapDeleteBookmark = "D"
let UltiSnipsListSnippets = "<c-tab>"
let NERDTreeMapJumpNextSibling = "<C-j>"
let EasyMotion_inc_highlight =  1 
let UltiSnipsEditSplit = "normal"
let NERDTreeCopyCmd = "cp -r "
let ConqueTerm_SendVisKey = "<F9>"
let NERDTreeMapQuit = "q"
let NERDTreeMapChangeRoot = "C"
let ConqueTerm_SessionSupport =  0 
let NERDTreeSortDirs = "1"
let ConqueTerm_TERM = "xterm"
let NERDTreeMapToggleFiles = "F"
let ConqueTerm_CWInsert =  0 
let ConqueTerm_Idx =  0 
let EasyMotion_force_csapprox =  0 
let ConqueTerm_PromptRegex = "^\\w\\+@[0-9A-Za-z_.-]\\+:[0-9A-Za-z_./\\~,:-]\\+\\$"
let NERDTreeMapOpenExpl = "e"
let NERDTreeMapJumpFirstChild = "K"
let ConqueGdb_SaveHistory =  1 
let NERDTreeMapOpenRecursively = "O"
let NERDTreeMapToggleBookmarks = "B"
let ConqueTerm_FocusedUpdateTime =  80 
let NERDTreeMapUpdir = "u"
let ConqueTerm_Syntax = "conque_term"
let NERDTreeMapUpdirKeepOpen = "U"
let EasyMotion_landing_highlight =  0 
let ConqueTerm_PyVersion =  2 
let NERDTreeMapJumpLastChild = "J"
silent only
cd ~/King/kingdomviews-sample/externals/game-platform
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +6 backend-packages/juego/source/common/juego/achievement/FFAchievementEvents.cpp
badd +51 backend-packages/juego/source/common/juego/achievement/FFAchievementTriggerAggregator.cpp
badd +5 backend-packages/juego/source/common/juego/achievement/FFAchievementCompletedAggregator.cpp
badd +51 backend-packages/juego/include/juego/achievement/FFAchievementTriggerAggregator.h
badd +20 backend-packages/juego/include/juego/achievement/FFAchievementCompletedAggregator.h
badd +20 backend-packages/juego/source/common/juego/achievement/taskprogress/FFCacheDelegator.cpp
badd +18 backend-packages/juego/include/juego/achievement/taskprogress/ReplacementAggregator.h
badd +19 backend-packages/juego/source/common/juego/achievement/taskprogress/ReplacementAggregator.cpp
badd +27 backend-packages/juego/include/juego/achievement/taskprogress/FFSender.h
badd +62 backend-packages/juego/source/common/juego/achievement/taskprogress/FFSender.cpp
badd +35 backend-packages/juego/include/juego/achievement/taskprogress/FFMerger.h
badd +37 backend-packages/juego/include/juego/achievement/taskprogress/FFCacheDelegator.h
badd +41 backend-packages/juego/include/juego/achievement/FFAchievementFetcher.h
badd +13 backend-packages/juego/include/juego/achievement/taskprogress/FFEvent.h
badd +1 backend-packages/juego/source/common/juego/achievement/taskprogress/FFEvent.cpp
badd +21 backend-packages/juego/tests/source/common/TaskProgressReplacementAggregatorTest.cpp
badd +143 backend-packages/juego/tests/source/common/AchievementCompletedAggregatorTest.cpp
badd +26 backend-packages/juego/tests/source/common/AchievementTriggerAggregatorTest.cpp
badd +55 backend-packages/juego/tests/source/common/CacheReplacementDelegatorTest.cpp
badd +13 backend-packages/juego-api/include/juego-api/achievement/FFAppAchievementDataDto.h
badd +8 backend-packages/juego/include/juego/achievement/FFAchievementEvents.h
badd +103 backend-packages/juego/tests/source/common/AchievementHelper.hpp
badd +38 backend-packages/juego/tests/source/common/AchievementTest.cpp
badd +4 backend-packages/juego/include/juego/achievement/taskprogress/CacheReplacementDelegator.h
badd +32 backend-packages/juego/source/common/juego/achievement/taskprogress/CacheReplacementDelegator.cpp
badd +11 backend-packages/juego/source/common/juego/achievement/FFAchievementFetcher.cpp
badd +22 backend-packages/juego/source/common/juego/kinglevel/FFAchievementActionAggregator.cpp
badd +13 backend-packages/juego/source/common/juego/FFJuegoSystems.cpp
badd +26 backend-packages/juego/include/juego/kinglevel/FFAchievementActionAggregator.h
argglobal
silent! argdel *
argadd backend-packages/juego/source/common/juego/achievement/FFAchievementEvents.cpp
edit backend-packages/juego/source/common/juego/achievement/FFAchievementCompletedAggregator.cpp
set splitbelow splitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 5 - ((4 * winheight(0) + 40) / 80)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
5
normal! 076|
tabedit backend-packages/juego/source/common/juego/achievement/FFAchievementTriggerAggregator.cpp
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 189 + 182) / 364)
exe 'vert 2resize ' . ((&columns * 174 + 182) / 364)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 13 - ((12 * winheight(0) + 40) / 80)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
13
normal! 023|
wincmd w
argglobal
edit backend-packages/juego/include/juego/achievement/FFAchievementTriggerAggregator.h
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 14 - ((13 * winheight(0) + 40) / 80)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
14
normal! 0141|
wincmd w
exe 'vert 1resize ' . ((&columns * 189 + 182) / 364)
exe 'vert 2resize ' . ((&columns * 174 + 182) / 364)
tabedit backend-packages/juego/tests/source/common/AchievementTriggerAggregatorTest.cpp
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 249 + 182) / 364)
exe 'vert 2resize ' . ((&columns * 114 + 182) / 364)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 133 - ((12 * winheight(0) + 40) / 80)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
133
normal! 012|
wincmd w
argglobal
edit backend-packages/juego/tests/source/common/AchievementCompletedAggregatorTest.cpp
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 17 - ((16 * winheight(0) + 40) / 80)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
17
normal! 0
wincmd w
exe 'vert 1resize ' . ((&columns * 249 + 182) / 364)
exe 'vert 2resize ' . ((&columns * 114 + 182) / 364)
tabnext 2
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=aoO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
